<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>Life Script - FLAG_CUBE, FLAG_GAME</title>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <link type="text/css" href="../../default.css" rel="stylesheet" />
</head>

<body>

<h1 class="cmd"><a href="../overview.htm">Life Script</a>: <b>FLAG_CUBE</b> (variable)<br />
    <a href="../overview.htm">Life Script</a>: <b>FLAG_GAME</b> (variable)</h1>

<div class="content">

<p><b>FLAG_CUBE</b> returns value of the specified Cube Flag, <b>FLAG_GAME</b> returns value of the specified Game Flag.</p>

<h5>Syntax:</h5>
<ul class="nomark">
  <li>if<span class="ComName"> FLAG_CUBE </span><span class="ComParams">id</span>(0 to 255 integer) == <span class="ComParams"> value</span>(0 to 255 integer)</li>
  <li>if<span class="ComName"> FLAG_GAME </span><span class="ComParams">id</span>(0 to 255 integer) == <span class="ComParams"> value</span>(0 to 255 integer)</li>
</ul>
<p class="hint">(<b>if</b> may be also: or_if, swif, oneif; <b>==</b> may be also: !=, &gt;, &lt;, &gt;=, &lt;=)</p>

<h5>Parameters:</h5>
<ul>
  <li><span class="ComParams">id </span>is the index of the Flag to test the value of.</li>
</ul>

<h5>Return value:</h5>
<ul>
  <li><b>FLAG_CUBE</b> and <b>FLAG_GAME</b> return current value of the Flag specified by <i>id</i>.</li>
</ul>

<p>There are two kinds of Flags in the scripting engine: Cube Flags and Game Flags. Cube Flags are <i>local</i> to the current Scene instance, i.e. they are reset to zero when a new Scene is loaded, be it by a <a href="../../zones.htm#sceneric">Sceneric Zone</a>, or <a href="../cmd/change_cube.htm">CHANGE_CUBE</a> command. They can be used only in the current <i>run</i> of the Scene. Game Flags in turn are global to all Scenes, i.e. value set in one Scene can be read in another Scene or after reloading the same Scene, and even after restarting the game (because Game Flags are stored in the game save files).</p>

<p>Both kinds of Flags have following common properties:</p>
<ul class="spaced">
  <li>They can contain any value from 0 to 255,</li>
  <li>They can be written and read in Life Script only,</li>
  <li>They can be written only with a constant value, not with another Flag or game variable value,</li>
  <li>Their value may be only read by performing comparison to a contant value (using the <b>FLAG_CUBE</b> and <b>FLAG_GAME</b> variables), not to another Flag or game variable value,</li>
  <li>It is not possible to perform arithmetical or logical operations on the Flag values, neither to transfer Flag value to a game variable directly (there is a way to do this, but it is so code-heavy and time consuming, that it's usage is questionable; it requires comparing the Flag value against all values from 0 to 255 and setting the variable when the condition is met; since Life Script does not have increment or decrement commands this would require building up 256 if-else conditions).</li>
</ul>

<p>The following Game Flags are reserved for controlling the game behaviour (their behaviour is hard-coded in the game engine):
<ul>
  <li>0..27: Inventory items - when 1 corresponding item is present in the Hero's inventory, when 0 it is not present.</li>
  <li>70: Inventory Disabled flag - when 1 the player cannot open the inventory.</li>
</ul>

<h5>Example:</h5>
<div class="Example">
  <span class="skey">if</span> <span class="svar">flag_cube</span> <span class="sparam">1</span> <span class="sop">&gt;</span> <span class="sparam">20</span> <span class="scom">//test if Cube Flag 1 has value greater than 20</span><br />
  <span class="scom indent0">//perform operations</span><br />
  <span class="skey">endif</span><br />
</div>

<h5>See also:</h5>
<ul>
  <li>Life Script: <a href="../cmd/set_flag_xx.htm">SET_FLAG_CUBE, SET_FLAG_GAME</a> (commands)</li>
</ul>

</div>

</body>
</html>
